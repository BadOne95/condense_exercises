// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model categories {
   id                      Int                       @id @default(autoincrement())
   createdAt               DateTime                  @default(now())
   updatedAt               DateTime                  @updatedAt @default(now())
   name                    String                    @unique @db.VarChar(255)
   path                    String                    @db.VarChar(255)
   weight                  Int
   shoes                   shoesToCategories[]

  @@index([path])
}
model models {
  id                    Int                     @id @default(autoincrement())
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt @default(now())
  name                  String                  @db.VarChar(255)
  material              String                  @db.VarChar(255)
  shoes                 shoes[]

  @@unique([name, material])
  @@index([name])
}
model shoes {
   id                      Int                       @id @default(autoincrement())
   createdAt               DateTime                  @default(now())
   updatedAt               DateTime                  @updatedAt @default(now())
   color                   String                    @db.VarChar(255)
   size                    String                    @db.VarChar(255)
   modelId                 Int
   model                   models                    @relation(fields: [modelId], references: [id], onDelete: Cascade, onUpdate: NoAction)
   categories              shoesToCategories[]

  @@unique([color, size, modelId])
}
model shoesToCategories {
   createdAt               DateTime                @default(now())
   updatedAt               DateTime                @updatedAt @default(now())
   shoeId                  Int
   shoe                    shoes                   @relation(fields: [shoeId], references: [id])
   categoryId              Int
   category                categories              @relation(fields: [categoryId], references: [id])
   path                    String                  @db.VarChar(255)
   weight                  Int

  @@index([path])
  @@id([shoeId, categoryId])
}
